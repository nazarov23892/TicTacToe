// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicTacToe.Data.DataContexts;

#nullable disable

namespace TicTacToe.Data.Migrations
{
    [DbContext(typeof(AppDataContext))]
    partial class AppDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.16");

            modelBuilder.Entity("TicTacToe.Services.Entities.GamePointItem", b =>
                {
                    b.Property<int>("PointId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("GameStateGameId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.Property<int>("X")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Y")
                        .HasColumnType("INTEGER");

                    b.HasKey("PointId");

                    b.HasIndex("GameStateGameId");

                    b.ToTable("GamePointItem");
                });

            modelBuilder.Entity("TicTacToe.Services.Entities.GameState", b =>
                {
                    b.Property<Guid>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Player1_Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Player2_Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("GameId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("TicTacToe.Services.Entities.GamePointItem", b =>
                {
                    b.HasOne("TicTacToe.Services.Entities.GameState", null)
                        .WithMany("Points")
                        .HasForeignKey("GameStateGameId");
                });

            modelBuilder.Entity("TicTacToe.Services.Entities.GameState", b =>
                {
                    b.Navigation("Points");
                });
#pragma warning restore 612, 618
        }
    }
}
